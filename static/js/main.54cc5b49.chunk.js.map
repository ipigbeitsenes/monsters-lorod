{"version":3,"sources":["components/card/card.component.jsx","components/card-list/Card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","Response","json","users","setState","this","filterdMonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qUAIcA,EAAO,SAAAC,GAAK,OAC1B,sBAAKC,UAAU,kBAAf,UACE,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACxB,6BAA6BL,EAAMI,QAAQE,MAAlCN,EAAMI,QAAQC,IACvB,4BAAIL,EAAMI,QAAQG,YCJLC,EAAW,SAACR,GAAD,OACrB,qBAAKC,UAAU,YAAf,SACKD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAE3B,cAAC,EAAD,CAAwBA,QAAUA,GAAtBA,EAAQC,UCLdM,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACvB,sBAAKZ,UAAU,kBAAf,UACA,uBACEA,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,IAEZ,qDCsCaG,E,kDAzCb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXR,SAAU,GACVS,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAEf,SAAUc,S,oBAE7C,WAAU,IAAD,SAC2BE,KAAKR,MAA/BR,EADD,EACCA,SAAUS,EADX,EACWA,YACZQ,EAAkBjB,EAASkB,QAAO,SAAAvB,GAAO,OAC7CA,EAAQE,KAAKsB,cAAcC,SAASX,EAAYU,kBAElD,OACE,sBAAK3B,UAAU,MAAf,UACG,gDACA,wDACD,cAAC,EAAD,CACEW,YAAY,kBACZC,aAAc,SAAAiB,GAAC,OACb,EAAKN,SAAS,CAAEN,YAAaY,EAAEC,OAAOC,WAC7C,uBAAM,uBACH,cAAC,EAAD,CAAUvB,SAAUiB,W,GA5BVO,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.54cc5b49.chunk.js","sourcesContent":["import React from 'react'\r\n import './card.style.css'\r\n\r\n\r\n export const Card = props => (\r\n<div className='card-container '>\r\n  <img alt='monster' src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}></img>\r\n<h2 key={props.monster.id} >{props.monster.name}</h2> \r\n<p>{props.monster.email}</p>\r\n</div>\r\n ); ","import React from 'react'\r\nimport './card-list.style.css'\r\nimport {Card} from '../card/card.component'\r\n\r\nexport const CardList = (props) =>(\r\n   <div className=\"card-list\">\r\n     {  props.monsters.map(monster => (\r\n   \r\n       <Card key= {monster.id} monster= {monster} />  \r\n     \r\n     ))}\r\n     \r\n    </div>\r\n \r\n);","import React from 'react'\r\nimport './search-box.style.css'\r\n\r\nexport const SearchBox = ( {placeholder, handleChange}) => (\r\n  <div className=\"searchContainer\">\r\n  <input\r\n    className='search'\r\n    type='search'\r\n    placeholder={placeholder}\r\n    onChange={handleChange}\r\n  />\r\n  <span>&#x1F50E;</span>\r\n  </div>\r\n);","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom'\nimport './App.css';\n\nimport { CardList } from './components/card-list/Card-list.component'\nimport { SearchBox } from './components/search-box/search-box.component'\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n\n  }\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(Response => Response.json())\n      .then(users => this.setState({ monsters: users }));\n  }\n  render() {\n    const { monsters, searchField } = this.state;\n    const filterdMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    )\n    return (\n      <div className=\"App\">\n         <h1>Monsters Lorod</h1>\n         <h4>By Ipigbe Itsenegbemhe</h4>\n        <SearchBox\n          placeholder='search monsters'\n          handleChange={e =>\n            this.setState({ searchField: e.target.value })}   />\n     <br /><br />\n        <CardList monsters={filterdMonsters} />\n\n      </div>\n    );\n  }\n}\n/* function App() {\n  return (\n    <div className=\"App\">\n      <p>man</p>\n    </div>\n  );\n}\n*/\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n"," import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root') \n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}